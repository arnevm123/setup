- name: Install packages
  become: true
  ansible.builtin.package:
    name:
      - tmux
      - jq
      - curl
      - fzf
      - webkit2gtk4.0
      - gimp
      - tldr
      - ripgrep
      - htop
      - btop
      - lsof
      - shutter
      - docker
      - docker-compose
      - openfortivpn
      - copyq
      - emacs
      - bat
      - git-delta
      - zoxide
      - thefuck
      - fd-find
      - thunderbird
      - '{{ "firefox" if ansible_pkg_mgr != "apt" else "firefox-esr" }}'
  tags:
    - install
    - productivity

# sudo groupadd docker
- name: Create "docker" group
  become: true
  ansible.builtin.group:
    name: "docker"
    state: present

# sudo usermod -aG docker $USER
- name: Add remote user to "docker" group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    group: "docker"
    append: true

- name: Install languages
  become: true
  ansible.builtin.package:
    name:
      - nodejs
      - npm
      # - '{{ "go" if ansible_pkg_mgr != "apt" else "golang-go" }}'
      - shellcheck
      - luarocks
      - make
      - ansible-lint
      - '{{ "python3-pip" if ansible_pkg_mgr != "pacman" else "python-pip" }}'
      - '{{ "g++" if ansible_pkg_mgr != "pacman" else "gcc" }}'
      - '{{ "sqlite" if ansible_pkg_mgr != "apt" else "sqlite3" }}'
      - '{{ "sqlite-devel" if ansible_pkg_mgr != "apt" else "libsqlite3-dev" }}'
      - '{{ "sqlite-tcl" if ansible_pkg_mgr != "apt" else "libsqlite3-tcl" }}'
  tags:
    - install
    - productivity
    - languages

- name: Check if deno is installed
  changed_when: false
  ansible.builtin.command: ~/.deno/bin/deno --version
  register: deno_exists
  ignore_errors: true
  tags:
    - install
    - productivity
    - languages

- name: Download Installer
  when: deno_exists is failed
  ansible.builtin.get_url:
    url: https://deno.land/x/install/install.sh
    dest: /tmp/sh.deno.rs
    mode: '0755'
    force: 'yes'
  tags:
    - deno
    - install
    - productivity
    - languages

- name: Install deno
  when: deno_exists is failed
  changed_when: false
  ansible.builtin.command: /bin/bash /tmp/sh.deno.rs
  tags:
    - deno
    - install
    - productivity
    - languages

- name: Check if cargo is installed
  changed_when: false
  ansible.builtin.command: ~/.cargo/bin/cargo --version
  register: cargo_exists
  ignore_errors: true
  tags:
    - install
    - productivity
    - languages

- name: Download Installer
  when: cargo_exists is failed
  ansible.builtin.get_url:
    url: https://sh.rustup.rs
    dest: /tmp/sh.rustup.rs
    mode: '0755'
    force: 'yes'
  tags:
    - rust
    - install
    - productivity
    - languages

- name: Install rust/cargo
  when: cargo_exists is failed
  changed_when: false
  ansible.builtin.command: /bin/bash /tmp/sh.rustup.rs -y
  tags:
    - rust
    - install
    - productivity
    - languages

- name: Check if bob is installed
  changed_when: false
  ansible.builtin.command: ~/.cargo/bin/bob --version
  register: bob_exists
  ignore_errors: true
  tags:
    - install
    - productivity
    - languages

- name: Install bob
  when: bob_exists is failed
  changed_when: false
  ansible.builtin.command: ~/.cargo/bin/cargo install wl-gammarelay-rs --locked
  tags:
    - neovim
    - install
    - productivity
    - languages

- name: Install bob
  when: bob_exists is failed
  changed_when: false
  ansible.builtin.command: ~/.cargo/bin/cargo install bob-nvim
  tags:
    - neovim
    - install
    - productivity
    - languages

- name: Install neovim
  changed_when: false
  ansible.builtin.command: ~/.cargo/bin/bob use stable
  tags:
    - neovim
    - install
    - productivity
    - languages
